// 「力扣挑战赛」心算项目的挑战比赛中，要求选手从 N 张卡牌中选出 cnt 张卡牌，若这 cnt 张卡牌数字总和为偶数，则选手成绩「有效」且得分为 cnt 张卡牌数字总和。 给定数组 cards 和 cnt，其中 cards[i] 表示第 i 张卡牌上的数字。 请帮参赛选手计算最大的有效得分。若不存在获取有效得分的卡牌方案，则返回 0。

// 输入：cards = [1,2,8,9], cnt = 3
// 输出：18
// 解释：选择数字为 1、8、9 的这三张卡牌，此时可获得最大的有效得分 1+8+9=18。

// 输入：cards = [3,3,1], cnt = 1
// 输出：0
// 解释：不存在获取有效得分的卡牌方案。

// 方法一：排序 + 贪心
// 为了选取尽量大的数，将 cards 从大到小排序，并累加前 cnt 个数，记作 s。
// 分类讨论：
//  - 如果 s 为偶数，这是我们能得到的最大的有效得分，直接返回 s 。
//  - 如果 s 为奇数，我们可以：
//      - 从前 cnt 个数中去掉一个最小的奇数，然后从 n - cnt 中加进来一个最大的偶数，这样得分就变成了偶数。
//      - 从前 cnt 个数中去掉一个最小的偶数，然后从 n - cnt 中加进来一个最大的奇数，这样得分就变成了偶数。
//      - 两种情况取最大值。
/**
 * @param {number[]} cards
 * @param {number} cnt
 * @return {number}
 */
var maxmiumScore = function (cards, cnt) {};
